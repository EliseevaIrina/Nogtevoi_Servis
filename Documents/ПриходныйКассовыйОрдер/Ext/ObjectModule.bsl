
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
	
	ТипДокументаОснования = ТипЗнч(ДанныеЗаполнения);
	
	ТипДокументаРеализации = Тип("ДокументСсылка.Реализация");
	ТипДокументаПоступлениеТоваровИУслуг = Тип("ДокументСсылка.ПоступлениеТоваровИУслуг");
	
	ДанныеЗаполненияОснования = Новый Структура;
	
	
	Если ТипДокументаОснования = ТипДокументаРеализации Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоРеализации(ДанныеЗаполнения);
	ИначеЕсли ТипДокументаОснования = ТипДокументаПоступлениеТоваровИУслуг Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоПоступлению(ДанныеЗаполнения);
			КонецЕсли;
	     ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполненияОснования);
		 
КонецПроцедуры


Функция ПолучитьДанныеПоРеализации(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст = 
	
	
	"ВЫБРАТЬ
	|	Реализация.Контрагент КАК Плательщик,
	|	Реализация.СуммаДокумента КАК СуммаДокумента,
	|	Реализация.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя) КАК ВидОперации,
	|	Реализация.Договор КАК Договор
	|ИЗ
	|	Документ.Реализация КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка = &Ссылка";
	
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции  
		
Функция ПолучитьДанныеПоПоступлению(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст = 
	
	
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслуг.Контрагент КАК Плательщик,
	|	ПоступлениеТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|	ПоступлениеТоваровИУслуг.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика) КАК ВидОперации,
	|	ПоступлениеТоваровИУслуг.Договор КАК Договор
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	|ГДЕ
	|	ПоступлениеТоваровИУслуг.Ссылка = &Ссылка";
	
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
    
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Касса = Касса;
	Движение.Сумма = СуммаДокумента;  
	
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	
	Движения.Хозрасчетный.Записывать = Истина;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);


КонецПроцедуры

Функция ПолучитьАналитикуПроводки()
	ОплатаОтПокупателя  = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
	ВозвратОтПоставщика = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика;
	ВозвратОтПодотчетника  = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПодотчетника;    
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
	СтруктураАналитики.Вставить("СубконтоДебет", Касса);
	Если ВидОперации = ОплатаОтПокупателя Тогда
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя наличными в кассу");
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	ИначеЕсли ВидОперации = ВозвратОтПоставщика Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат от поставщика наличными в кассу");
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	ИначеЕсли ВидОперации = ВозвратОтПодотчетника Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат подотчетных средств"); 
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	КонецЕсли;
	
	Возврат СтруктураАналитики;
	
КонецФункции