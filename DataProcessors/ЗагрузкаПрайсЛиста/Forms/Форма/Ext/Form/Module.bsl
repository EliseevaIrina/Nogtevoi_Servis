&НаКлиенте
Процедура ЗагрузкаПрайсЛиста(Команда)
	СкопироватьФайлНаСервер("ПостроительЗапроса");
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСервер(СпособЗагрузки)

	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект, СпособЗагрузки);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);
	
КонецПроцедуры 

&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
		
		АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес; 
		
		ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦеныПродажи, ДополнительныеПараметры); 
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦеныПродажи, ДополнительныеПараметры)
    
	ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	
	ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийИзТабличногоДокумента(ТабДок);
	
	Если ТаблицаПрайсЛиста.Количество() Тогда
		ЗагрузитьПрайсЛиста(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦеныПродажи);
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = "Выбранный файл не содержит строк с ценами!";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста                            
Функция ПрочитатьФайл(АдресФайлаВХранилище)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx"); 
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище); 
	ДвоичныеДанные.Записать(ИмяВременногоФайла); 
	
	Попытка
		ТабДок.Прочитать(ИмяВременногоФайла); 
	Исключение  
		ВызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
	КонецПопытки; 
	
	Возврат ТабДок;
	
КонецФункции


&НаСервереБезКонтекста
Процедура ЗагрузитьПрайсЛиста(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦеныПродажи)
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТаблицаПрайсЛиста.Цена КАК Цена,
	|	ТаблицаПрайсЛиста.Код КАК Код
	|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
	|ИЗ
	|	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена,
	|	ВТ_ТаблицаПрайсЛиста.Код КАК Код
	|ИЗ
	|	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТаблицаПрайсЛиста.Код = Номенклатура.Код";
	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	КолСТР = 0;
	Выборка = Рез.Выбрать(); 
	
	
	Пока Выборка.Следующий() Цикл
		Если (Выборка.Цена <> "") И (Выборка.Код <>"") Тогда
			ФормаСписка = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
			ФормаСписка.Период = ДатаПрайсЛиста;
			ФормаСписка.Номенклатура = Выборка.Номенклатура;
			ФормаСписка.ВидЦены = ВидЦеныПродажи;
			ФормаСписка.Цена = Выборка.Цена;
			ФормаСписка.Записать();
			КолСТР = КолСТР + 1; 
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю();
			СообщениеПользователю.Текст = СтрШаблон("Произошла ошибка при проведении документа установки цен!");
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
	ФормаСписка.Записать();
	СообщениеПользователю = Новый СообщениеПользователю();
	СообщениеПользователю.Текст = СтрШаблон("Создан и проведен документ установки цен: ""%1"" !", КолСТР);
	СообщениеПользователю.Сообщить();
				
Конецпроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийИзТабличногоДокумента(ТабДок)

	ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы); 
	
	Построитель = Новый ПостроительЗапроса; 
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента); 
	Построитель.Выполнить();
	
	ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить(); 
	
	Возврат ТаблицаПрайсЛиста;  
	
КонецФункции

